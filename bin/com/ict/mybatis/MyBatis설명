1. MyBatis 다운 받아서 util 폴더에 넣고 압축해제
2. mybatis-3.X.XX.jar, mybatis-3.X.XX.pdf 파일이 필요하다.
2-1. 프로젝트애서 마우스 오른쪽 Build Path - Configure Build Path 선택
2-2. 프로젝트 선택 후 window - preferences - Maven - download Artifact Javadoc 선택
3. MyBatis 는 자바진영에서 사용하는 SQL 프레임 워크(=구조화된 틀)
4. 만들기
4-1. VO 를 먼저 만들자. 
	 원하는 테이블과 컬럼명이 일치, 
	 일부를 빼도 상관 없고, 다른 테이블의 컬럼명을 넣어도 상관없다.
4-2. config.xml 를 만들자.
	 (참고, xml 이란 확장 마크업 언어, 사용자가 태그 만들어서 사용할 수 있다.)
	 다운 받은 pdf 를 보면 만드는 법이 나온다. (3페이지에 나옴)
	 xml 파일의 첫 줄은 무조건 <?xml version="1.0" encoding="UTF-8"?>
	 encoding 이란 문자를 바이트코드로 변환하는 것. 
	 utf-8 : 전세계언어를 표현가능. 유니코드              3pg 복사하기
	 => 오라클에 접속 정보 입력
	 => mapper.xml 위치 지정
	 
4-3. mapper.xml 를 만들자.
	 	다운 받은 pdf 를 보면 만드는 법이 나온다. (4페에지에 나온다)
	 mapper namespace="메퍼이름" 는 mapper 가 여러 개 일때 구분하기 위함
	 자바에서 mapper 에 접근할 때 namespace 가 지정한 메퍼이름.id 로 접근한다.
	 mapper 는 쿼리를 사용하여 DB에 보내고 결과를 받아서 mapper 를 호출한 곳으로 
	 결과를 되돌려 보내는 역활을 한다.
	 태그 자체가 select, insert, update, delete 태그 있다.
	 
5. DBService.java 만들기
	=> config 파일 읽어서 자바에서 MyBatis 를 사용할수 있도록 도와 주는 클래스
		다운 받은 pdf 를 보면 만드는 법이 나온다. (2, 9페에지에 나온다)
		자바에서는 sqlSession 클레스를 사용한다.
		sqlSession 클레스를 사용하기 위해서 SqlSessionFactory 가 필요하다.
		SqlSessionFactory 를 리턴해주는 클래스
		
	 SqlSessionFactory factory =
 sqlSessionFactoryBuilder.build(reader, props);
 
 6. DAO.java 만들기
 DB 처리하는 클래스: DBService.getFactory()로 SqlSessionFactory를 호출하고
 				SqlSessionFactory를 이용해서 자바에서 사용할 수 있는 SqlSession를 만들어 사용.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	 
	 

  <!----- dtd 우리 회사에서 만든 태그에 대한 설명, 어떤 일을 하는지에 대한 정의 해놓은것  --> 
  
  